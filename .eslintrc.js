module.exports = {
    root: true,
    plugins: ["@typescript-eslint", "import", "prefer-arrow"],
    extends: [
        "eslint:recommended",
        "plugin:import/typescript",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
    ],
    ignorePatterns: ["node_modules/", "*.js", "*.d.ts"],
    parser: "@typescript-eslint/parser",
    parserOptions: {
        project: "tsconfig.json",
        sourceType: "module",
    },
    rules: {
        "arrow-body-style": ["error", "as-needed"],
        "consistent-return": "error",
        curly: "error",
        "default-case": "error",
        "dot-notation": "error",
        eqeqeq: "error",
        "new-parens": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-console": "error",
        "no-eval": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-param-reassign": "error",
        "no-sequences": "error",
        "no-shadow": [
            "error",
            {
                hoist: "all",
            },
        ],
        "no-template-curly-in-string": "error",
        "no-throw-literal": "error",
        "no-void": "error",
        "object-shorthand": "error",
        "prefer-arrow/prefer-arrow-functions": [
            "error",
            {
                disallowPrototype: true,
                allowStandaloneDeclarations: true,
            },
        ],
        "prefer-arrow-callback": "error",
        "prefer-object-spread": "error",
        radix: "error",
        "spaced-comment": ["error", "always", { markers: ["/"] }],
        "use-isnan": "error",
        "import/first": "error",
        "import/no-default-export": "error",
        "import/no-duplicates": "error",
        "import/no-useless-path-segments": "error",
        "import/order": [
            "error",
            {
                "newlines-between": "always",
                alphabetize: {
                    order: "asc",
                    caseInsensitive: true,
                },
            },
        ],
        "sort-imports": [
            "error",
            { ignoreDeclarationSort: true, ignoreCase: true },
        ],
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/consistent-indexed-object-style": "error",
        "@typescript-eslint/consistent-type-definitions": [
            "error",
            "interface",
        ],
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            { allowExpressions: true },
        ],
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-condition": [
            "error",
            { allowConstantLoopConditions: true },
        ],
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-unused-vars": ["warn", { args: "none" }],
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/require-array-sort-compare": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/strict-boolean-expressions": "error",
        "@typescript-eslint/unified-signatures": "error",
    }
}